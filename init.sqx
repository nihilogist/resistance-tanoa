call compile preprocessFileLineNumbers "resistance\interfaces\compile-all-interfaces.sqx";
call compile preprocessFileLineNumbers "resistance\classes\compile-all-classes.sqx";
call compile preprocessFileLineNumbers "Sqx\UnitTest\Init.sqx.sqf"
call compile preprocessFileLineNumbers "resistance\tests\compile-all-tests.sqx";

using dave3;

private ["_saveManager" as SaveManager, "_gameMaster" as GameMaster, "_savedWorldData" as Array];

sleep 3;



// Initialise singletons
missionLogger = [LogLevel.Info] new LoggerUtil;
[["---"], LogLevel.Info] call missionLogger.logMessage;
[["---"], LogLevel.Info] call missionLogger.logMessage;
[["---"], LogLevel.Info] call missionLogger.logMessage;
[["---"], LogLevel.Info] call missionLogger.logMessage;
[["---"], LogLevel.Info] call missionLogger.logMessage;
[["Logger initialised"], LogLevel.Info] call missionLogger.logMessage;
[["---"], LogLevel.Info] call missionLogger.logMessage;
[["---"], LogLevel.Info] call missionLogger.logMessage;
[["---"], LogLevel.Info] call missionLogger.logMessage;
[["---"], LogLevel.Info] call missionLogger.logMessage;
[["---"], LogLevel.Info] call missionLogger.logMessage;

if (testBuild) then {
	call Sqx_UnitTest_TestEngine_RunDelayedAsync; // Added by Sqx.UnitTest
	sleep 10;
};


_saveManager = [nukeTheSave, saveGameName, 30] new SaveManager;
_gameMaster = [] new GameMaster;

// Check to see if world can be loaded
_savedWorldData = call _saveManager.getSavedData;


[["INIT: Parsing saved world data", _savedWorldData], LogLevel.Info] call missionLogger.logMessage;


if (count _savedWorldData == 0) then {
	[["INIT: No campaign data in save file."], LogLevel.Error] call missionLogger.logMessage;
	_savedWorldData = [campaignDataInitial];
} else {
	[["INIT: Selecting campaign data from save file"], LogLevel.Info] call missionLogger.logMessage;
};

[["INIT: Using data to construct campaign state: ", _savedWorldData], LogLevel.Info] call missionLogger.logMessage;
theWorld = _savedWorldData new Campaign;

sleep 5;

[["INIT: Building world from save and spawning physreps."], LogLevel.Info] call missionLogger.logMessage;
[] call theWorld.build;

// Once the world is initialised, then set it into the save manager and request a save.
[theWorld] call _saveManager.setWorldToSave;
[] call _saveManager.requestSave;
[] call _saveManager.RunAsync;
[] call _saveManager.runAutosaveAsync;


// Give a little while for the objects to initialise
sleep 10;

// Start the game master
[] call _gameMaster.startGameMasterAsync; 