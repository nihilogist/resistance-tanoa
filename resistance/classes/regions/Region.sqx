/*
 * Name:	Region
 * Date:	03/08/2019
 * Version: 1.0
 * Author:  dave3
 *
 * Description:
 * Represents a Region
 */
namespace dave3
{
	public class Region : ISaveable
	{
	
		// Properties for the region
		public property String regionName {get; private set; };
		public property Array towns {get; private set; };
		public property Array prisonCamps { get; private set; };
		public property GendarmeHQ gendarmeHQ { get; private set; };
	
		// Creates a Region object.
		public constructor {
			params ["_regionData" as Array];
			
			// Unpack the region name
			_self.regionName = _regionData select 0;
			
			// Create the region's prison camps
			_self.prisonCamps = [];
			{
				_self.prisonCamps pushBack ([_x] new PrisonCamp);
			} forEach (_regionData select 1);
			
			
			// Create the gendarme HQ for the area
			_self.gendarmeHQ = [[(_regionData select 2) select 0, _self.regionName]] new GendarmeHQ;
			
			// Create the region's towns
			_self.towns = [];
			{
				_self.towns pushBack ([_x] new Town);
			} forEach (_regionData select 3);
			
		};
		
		
		public method Array getSaveableData() {
			private ["_saveableData" as Array, "_gendarmeHQ" as GendarmeHQ, "_prisonCamps" as Array, "_towns" as Array];
			_gendarmeHQ = _self.gendarmeHQ;
			
			_prisonCamps = [];
			{
				_prisonCamps pushBack ([] call _x.getSaveableData);
			} forEach _self.prisonCamps as PrisonCamp;
			
			_towns = [];
			{
				_towns pushBack ([] call _x.getSaveableData);
			} forEach _self.towns as Town;
			
			_saveableData = [
				_self.regionName, // 0 = region name
				_prisonCamps, // 1 = prison camp
				call _gendarmeHQ.getSaveableData, // 2 = gendarme HQ
				[] // 3 = towns
			];
			_saveableData
		};
		
	};
};

