/*
 * Name:	World
 * Date:	04/08/2019
 * Version: 1.0
 * Author:  dave3
 *
 * Description:
 * Represents the whole world (island)
 */
namespace dave3
{
	public class WorldRegions : ISaveable
	{
		
		public property String worldName { get; private set; };
		
		public property Array regions { get; private set; };
		
		// Creates a World object.
		public constructor {
			params ["_worldData" as Array];

			private ["_regionsData" as Array, "_region" as Region];

			_self.worldName = _worldData select 0;
			_regionsData = _worldData select 1;
			
			[["Initialising World ", _self.worldName, " with ", count _regionsData, " regions."] joinString ""] call logger;
			
			_self.regions = [];
			// Iterate over all regions and create them
			{
				[["Reading data for region ", _x] joinString ""] call logger;
				_region = [_x] new Region;
				_self.regions pushBack _region;
			} forEach _regionsData;
		};
		
		
		public method Array getSaveableData {
			private ["_saveData" as Array, "_saveableRegions" as Array, "_saveableRegion" as Array];
			
			_saveableRegions = [];
			
			{
				_saveableRegion = [] call _x.getSaveableData;
				_saveableRegions pushBack _saveableRegion;
			} forEach _self.regions as Region;
			
			_saveData = [
				_self.worldName,
				_saveableRegions
			];
			
			_saveData
		};
	};
};

